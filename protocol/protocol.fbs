enum PacketType: uint16 {
    ServerHello = 0,
    FullImage,
    StartDraw,
    EndDraw,
    DrawPoints,
    DeleteBatch,
    UserEnter,
    UserLeave
}

struct PacketHeader {
    packet_type: PacketType;
    payload_length: uint16;
}

union Payload {
    ServerHelloPayload,
    FullImagePayload,
    StartDrawPayload,
    EndDrawPayload,
    DrawPointsPayload,
    DeleteBatchPayload,
    UserEnterPayload,
    UserLeavePayload
}

table PacketPayload {
    payload: Payload;
}

struct Vec2 {
    x: int16;
    y: int16;
}

table DrawBatch {
    uid: uint32;
    sequence_id: uint32;
    color: uint32;
    points: [Vec2];
}

table ServerHelloPayload {
    uid: uint32;
    color: uint32;
}

table FullImagePayload {
    batches: [DrawBatch];
}

table StartDrawPayload {
    uid: uint32;
    sequence_id: uint32;
    color: uint32;
}

table EndDrawPayload {
    uid: uint32;
    sequence_id: uint32;
}

table DrawPointsPayload {
    uid: uint32;
    sequence_id: uint32;
    points: [Vec2];
}

table DeleteBatchPayload {
    uid: uint32;
    sequence_id: uint32;
}

table UserEnterPayload {
    uid: uint32;
    color: uint32;
}

table UserLeavePayload {
    uid: uint32;
}

root_type PacketPayload;